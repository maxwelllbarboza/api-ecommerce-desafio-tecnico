generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // "postgresql://maxwellbarboza:cqFkuxvz7U4H@ep-odd-pine-a41t4v5a-pooler.us-east-1.aws.neon.tech/db-pessoal?schema=ecommerce"
}

model User {
  id               String   @id @default(cuid())
  email            String   @unique
  password         String
  role             Role     @default(USER)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  hashRefreshToken String?
  orders           Order[]
}

model Category {
  id        String    @id @default(cuid())
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]
}

model Product {
  id          String      @id @default(cuid())
  name        String
  description String?
  price       Float
  stock       Int
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  categoryId  String
  OrderItem   OrderItem[]
  category    Category    @relation(fields: [categoryId], references: [id])
}

model Order {
  id        String      @id @default(cuid())
  userId    String
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  status    OrderStatus @default(PENDING)
  active    Boolean?    @default(true)
  user      User        @relation(fields: [userId], references: [id])
  items     OrderItem[]
}

model OrderItem {
  id        String  @id @default(cuid())
  orderId   String
  productId String
  quantity  Int
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}

enum Role {
  USER
  ADMIN
}

enum OrderStatus {
  PENDING
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELED
  COMPLETED
}
